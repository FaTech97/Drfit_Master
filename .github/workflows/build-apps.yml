name: Build for WEB and Android

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'  

env:
  VERSION_PREFIX: v1.0

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - Android # Build an Android .apk standalone app.
    steps:
      - name: Get repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "Repository name: $REPO_NAME"
          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.repo-name.outputs.repo_name }}-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.repo-name.outputs.repo_name }}-${{ matrix.targetPlatform }}
          path: builds

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{env.VERSION_PREFIX}}.${{ github.run_number }}
          release_name: Release  ${{env.VERSION_PREFIX}}.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: TEST
        id: repo-test
        run: |
          pwd
          echo "*****************************************************"
          ls -l 
          echo "*****************************************************"
          cd builds
          ls -l

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/*.apk
          asset_name: ${{ steps.repo-name.outputs.repo_name }}-${{env.VERSION_PREFIX}}.${{ github.run_number }} (${{ matrix.targetPlatform }}).apk
          asset_content_type: application/vnd.android.package-archive

# name: Build APK and Create Release

# on:
#   push:
#     branches:
#       - master  # Укажите ветку, на которую нужно реагировать

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up JDK
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'  # Укажите версию Java, если нужно
#           distribution: 'temurin'

#       - name: Build APK
#         run: |
#           ./gradlew assembleRelease  # Команда для сборки APK (замените на вашу)

#       - name: Upload APK as artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: app-release
#           path: app/build/outputs/apk/release/app-release.apk  # Путь к APK (замените на ваш)

#   create-release:
#     runs-on: ubuntu-latest
#     needs: build  # Зависит от job `build`

#     steps:
#       - name: Download APK artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: app-release
#           path: ./builds

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Используем встроенный токен
#         with:
#           tag_name: v1.0.${{ github.run_number }}  # Автоматическая нумерация тегов
#           release_name: Release v1.0.${{ github.run_number }}
#           draft: false
#           prerelease: false
#           generate_release_notes: true

#       - name: Upload APK to Release
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}  # URL для загрузки файла
#           asset_path: ./builds/app-release.apk  # Путь к APK
#           asset_name: app-release.apk  # Имя файла в релизе
#           asset_content_type: application/vnd.android.package-archive


# **********************************************************************************************

# name: Build for WEB and Android

# on:
#   push:
#     branches:
#       - master
#     paths-ignore:
#       - 'README.md'  

# jobs:
#   buildForAllSupportedPlatforms:
#     name: Build for ${{ matrix.targetPlatform }}
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         targetPlatform:
#           - Android # Build an Android .apk standalone app.
#     steps:
#       - name: Get repository name
#         id: repo-name
#         run: |
#           REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
#           echo "Repository name: $REPO_NAME"
#           echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#           lfs: true
#       - uses: actions/cache@v3
#         with:
#           path: Library
#           key: Library-${{ matrix.targetPlatform }}
#           restore-keys: Library-
#       - if: matrix.targetPlatform == 'Android'
#         uses: jlumbroso/free-disk-space@v1.3.1
#       - uses: game-ci/unity-builder@v4
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           targetPlatform: ${{ matrix.targetPlatform }}
#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ steps.repo-name.outputs.repo_name }}-${{ matrix.targetPlatform }}
#           path: build/${{ matrix.targetPlatform }}
      
#       - name: Download build artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: ${{ steps.repo-name.outputs.repo_name }}-${{ matrix.targetPlatform }}
#           path: builds

#       - name: Update README.md with APK download link
#         run: |
#           APK_FILE=$(ls builds/*.apk)
#           APK_NAME=$(basename $APK_FILE)
#           DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/latest/download/$APK_NAME"
#           sed -i "14s|.*|${{ matrix.targetPlatform }} : [Download $APK_NAME]($DOWNLOAD_URL)|" README.md
#           git config --global user.name "GitHub Actions"
#           git config --global user.email "actions@github.com"
#           git add README.md
#           git commit -m "Update README.md with APK download link for ${{ matrix.targetPlatform }}" [skip ci]
#           git push "https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git" HEAD:master